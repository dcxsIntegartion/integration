<?xml version="1.0" encoding="UTF-8"?>
<web-app>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/classes/spring-mvc.xml</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	
	<!-- xss过滤  放在过滤器第一个位子-->
	<filter>
	    <filter-name>requestFilter</filter-name>
	    <filter-class>team.union.sys_sp.filter.RequestFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>requestFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	  <description>配置压缩过滤器</description>
      <filter-name>GzipFilter</filter-name>
      <filter-class>team.union.sys_sp.filter.util.ResponseWrapper</filter-class>
    </filter>
	<!--js文件的输出的内容都经过压缩过滤器压缩后才输出 -->
	<filter-mapping>
	    <filter-name>GzipFilter</filter-name>
	    <url-pattern>*.js</url-pattern>
	</filter-mapping>
	<!--css文件的输出的内容都经过压缩过滤器压缩后才输出 -->
	<filter-mapping>
	    <filter-name>GzipFilter</filter-name>
	    <url-pattern>*.css</url-pattern>
	</filter-mapping>
	<!--html文件的输出的内容都经过压缩过滤器压缩后才输出 -->
	<filter-mapping>
	    <filter-name>GzipFilter</filter-name>
	    <url-pattern>*.html</url-pattern>
	</filter-mapping> 
	 
	<!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
    <!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>
    
	<!-- http转https Authorization setting for SSL 
	<login-config>    
     <auth-method>CLIENT-CERT</auth-method>    
     <realm-name>Client Cert Users-only Area</realm-name>    
	</login-config>    
	<security-constraint>    
	     <web-resource-collection >    
	     <web-resource-name >SSL</web-resource-name>    
	     <url-pattern>/*</url-pattern>    
	     </web-resource-collection>    
	     <user-data-constraint>    
	     <transport-guarantee>CONFIDENTIAL</transport-guarantee>    
	     </user-data-constraint>    
	</security-constraint> 
	-->
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/classes/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	<welcome-file-list>
       <welcome-file>/index</welcome-file>
 </welcome-file-list>
</web-app>