<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.union.business.activity.dao.BisActivityCommodityRDao">
	<resultMap id="BaseResultMap"
		type="team.union.business.activity.model.BisActivityCommodityR">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="activity_id" property="activityId" jdbcType="BIGINT" />
		<result column="activity_type" property="activityType"
			jdbcType="INTEGER" />
		<result column="commodity_id" property="commodityId" jdbcType="BIGINT" />
		<result column="activity_price" property="activityPrice"
			jdbcType="DECIMAL" />
		<result column="commodity_num" property="commodityNum"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, activity_id, activity_type, commodity_id, activity_price,
		commodity_num
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="team.union.business.activity.model.BisActivityCommodityRExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bis_activity_commodity_r
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from bis_activity_commodity_r
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from bis_activity_commodity_r
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="team.union.business.activity.model.BisActivityCommodityRExample">
		delete from bis_activity_commodity_r
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="team.union.business.activity.model.BisActivityCommodityR">
		insert into bis_activity_commodity_r (id, activity_id, activity_type,
		commodity_id, activity_price, commodity_num
		)
		values (#{id,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT},
		#{activityType,jdbcType=INTEGER},
		#{commodityId,jdbcType=BIGINT}, #{activityPrice,jdbcType=DECIMAL}, #{commodityNum,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="team.union.business.activity.model.BisActivityCommodityR">
		insert into bis_activity_commodity_r
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="activityId != null">
				activity_id,
			</if>
			<if test="activityType != null">
				activity_type,
			</if>
			<if test="commodityId != null">
				commodity_id,
			</if>
			<if test="activityPrice != null">
				activity_price,
			</if>
			<if test="commodityNum != null">
				commodity_num,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="activityId != null">
				#{activityId,jdbcType=BIGINT},
			</if>
			<if test="activityType != null">
				#{activityType,jdbcType=INTEGER},
			</if>
			<if test="commodityId != null">
				#{commodityId,jdbcType=BIGINT},
			</if>
			<if test="activityPrice != null">
				#{activityPrice,jdbcType=DECIMAL},
			</if>
			<if test="commodityNum != null">
				#{commodityNum,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="team.union.business.activity.model.BisActivityCommodityRExample"
		resultType="java.lang.Integer">
		select count(*) from bis_activity_commodity_r
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update bis_activity_commodity_r
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.activityId != null">
				activity_id = #{record.activityId,jdbcType=BIGINT},
			</if>
			<if test="record.activityType != null">
				activity_type = #{record.activityType,jdbcType=INTEGER},
			</if>
			<if test="record.commodityId != null">
				commodity_id = #{record.commodityId,jdbcType=BIGINT},
			</if>
			<if test="record.activityPrice != null">
				activity_price = #{record.activityPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.commodityNum != null">
				commodity_num = #{record.commodityNum,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update bis_activity_commodity_r
		set id = #{record.id,jdbcType=BIGINT},
		activity_id = #{record.activityId,jdbcType=BIGINT},
		activity_type = #{record.activityType,jdbcType=INTEGER},
		commodity_id = #{record.commodityId,jdbcType=BIGINT},
		activity_price = #{record.activityPrice,jdbcType=DECIMAL},
		commodity_num = #{record.commodityNum,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="team.union.business.activity.model.BisActivityCommodityR">
		update bis_activity_commodity_r
		<set>
			<if test="activityId != null">
				activity_id = #{activityId,jdbcType=BIGINT},
			</if>
			<if test="activityType != null">
				activity_type = #{activityType,jdbcType=INTEGER},
			</if>
			<if test="commodityId != null">
				commodity_id = #{commodityId,jdbcType=BIGINT},
			</if>
			<if test="activityPrice != null">
				activity_price = #{activityPrice,jdbcType=DECIMAL},
			</if>
			<if test="commodityNum != null">
				commodity_num = #{commodityNum,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="team.union.business.activity.model.BisActivityCommodityR">
		update bis_activity_commodity_r
		set activity_id = #{activityId,jdbcType=BIGINT},
		activity_type = #{activityType,jdbcType=INTEGER},
		commodity_id = #{commodityId,jdbcType=BIGINT},
		activity_price = #{activityPrice,jdbcType=DECIMAL},
		commodity_num = #{commodityNum,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 活动-商品关联基本查询 -->
	<select id="baseSelect" parameterType="hashmap" resultType="hashmap">
	select id, 
	activity_id activityId, 
	activity_type activityType, 
	commodity_id commodityId, 
	activity_price activityPrice,
	commodity_num commodityNum
	from bis_activity_commodity_r
	<where>
		<if test="activityId != null">
			and activity_id = #{activityId}
		</if>
		<if test="activityType != null">
			and activity_type = #{activityType}
		</if>
		<if test="commodityId != null">
			and commodity_id = #{commodityId}
		</if>
	</where>
	</select>
	<!-- 删除活动关联商品 -->
	<delete id="deleteByactivity" parameterType="hashmap">
		delete from bis_activity_commodity_r
		where activity_id=#{avtivityId}
		and activity_type = #{avtivityType}
	</delete>
</mapper>